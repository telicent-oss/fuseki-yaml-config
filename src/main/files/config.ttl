PREFIX :        <#>
PREFIX authz:   <http://telicent.io/security#>
PREFIX cqrs:    <http://telicent.io/cqrs#>
PREFIX fk:      <http://jena.apache.org/fuseki/kafka#>
PREFIX fuseki:  <http://jena.apache.org/fuseki#>
PREFIX graphql: <https://telicent.io/fuseki/modules/graphql#>
PREFIX ja:      <http://jena.hpl.hp.com/2005/11/Assembler#>
PREFIX rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX tdb2:    <http://jena.apache.org/2016/tdb#>

:connector3  rdf:type         fk:Connector;
        fk:bootstrapServers   "localhost:9092";
        fk:configFile         "env:{KAFKA_CONFIG_FILE_PATH:}";
        fk:fusekiServiceName  "/catalog/upload";
        fk:replayTopic        false;
        fk:stateFile          "/fuseki/databases/Replay-RDF.state";
        fk:topic              "catalog" .

:datasetAuthBase  rdf:type  tdb2:DatasetTDB2;
        tdb2:location  "/fuseki/databases/knowledge" .

:datasetOntoBase  rdf:type  tdb2:DatasetTDB2;
        tdb2:location  "/fuseki/databases/ontology" .

:service2  rdf:type      fuseki:Service;
        fuseki:dataset   :ontologyDataset;
        fuseki:endpoint  [ fuseki:operation  fuseki:query ];
        fuseki:endpoint  [ fuseki:name       "upload";
                           fuseki:operation  authz:upload
                         ];
        fuseki:endpoint  [ fuseki:name       "graphql";
                           fuseki:operation  graphql:graphql;
                           ja:context        [ ja:cxtName   "graphql:executor";
                                               ja:cxtValue  "io.telicent.jena.graphql.execution.telicent.graph.TelicentGraphExecutor"
                                             ]
                         ];
        fuseki:endpoint  [ fuseki:name       "get";
                           fuseki:operation  fuseki:gsp-r
                         ];
        fuseki:endpoint  [ fuseki:name       "update";
                           fuseki:operation  cqrs:update;
                           ja:context        [ ja:cxtName   "kafka:topic";
                                               ja:cxtValue  "ontology"
                                             ]
                         ];
        fuseki:endpoint  [ fuseki:name       "sparql";
                           fuseki:operation  fuseki:query
                         ];
        fuseki:endpoint  [ fuseki:name       "query";
                           fuseki:operation  fuseki:query
                         ];
        fuseki:name      "ontology" .

:connector2  rdf:type         fk:Connector;
        fk:bootstrapServers   "localhost:9092";
        fk:configFile         "env:{KAFKA_CONFIG_FILE_PATH:}";
        fk:fusekiServiceName  "/ontology/upload";
        fk:replayTopic        false;
        fk:stateFile          "/fuseki/databases/Replay-RDF.state";
        fk:topic              "ontology" .

:datasetCatBase  rdf:type  tdb2:DatasetTDB2;
        tdb2:location  "/fuseki/databases/catalog" .

:ontologyDataset  rdf:type         authz:DatasetAuthz;
        authz:attributesURL        "env:USER_ATTRIBUTES_URL";
        authz:cache                false;
        authz:dataset              :datasetOntoBase;
        authz:hierarchiesURL       "env:ATTRIBUTE_HIERARCHY_URL";
        authz:labelsStore          [ authz:labelsStorePath
                          "/fuseki/databases/ontologyLabels.db" ];
        authz:tripleDefaultLabels  "!" .

:datasetAuth  rdf:type             authz:DatasetAuthz;
        authz:attributesURL        "env:USER_ATTRIBUTES_URL";
        authz:cache                false;
        authz:dataset              :datasetAuthBase;
        authz:hierarchiesURL       "env:ATTRIBUTE_HIERARCHY_URL";
        authz:labelsStore          [ authz:labelsStorePath
                          "/fuseki/databases/knowledgeLabels.db" ];
        authz:tripleDefaultLabels  "!" .

[ rdf:type         fuseki:Server;
  fuseki:name      "Server";
  fuseki:services  ( :service1 :service2 :service3 );
  ja:context       [ ja:cxtName   "arq:httpServiceAllowed";
                     ja:cxtValue  "false"
                   ]
] .

:service1  rdf:type      fuseki:Service;
        fuseki:dataset   :datasetAuth;
        fuseki:endpoint  [ fuseki:name       "upload";
                           fuseki:operation  authz:upload
                         ];
        fuseki:endpoint  [ fuseki:name       "get";
                           fuseki:operation  fuseki:gsp-r
                         ];
        fuseki:endpoint  [ fuseki:name       "graphql";
                           fuseki:operation  graphql:graphql;
                           ja:context        [ ja:cxtName   "graphql:executor";
                                               ja:cxtValue  "io.telicent.jena.graphql.execution.telicent.graph.TelicentGraphExecutor"
                                             ]
                         ];
        fuseki:endpoint  [ fuseki:name       "update";
                           fuseki:operation  cqrs:update;
                           ja:context        [ ja:cxtName   "kafka:topic";
                                               ja:cxtValue  "knowledge"
                                             ]
                         ];
        fuseki:endpoint  [ fuseki:name       "query";
                           fuseki:operation  fuseki:query;
                           ja:context        [ ja:cxtName   "arq:queryTimeout";
                                               ja:cxtValue  "120000,120000"
                                             ]
                         ];
        fuseki:endpoint  [ fuseki:name       "sparql";
                           fuseki:operation  fuseki:query;
                           ja:context        [ ja:cxtName   "arq:queryTimeout";
                                               ja:cxtValue  "120000,120000"
                                             ]
                         ];
        fuseki:name      "knowledge" .

:catalogDataset  rdf:type          authz:DatasetAuthz;
        authz:attributesURL        "env:USER_ATTRIBUTES_URL";
        authz:cache                false;
        authz:dataset              :datasetCatBase;
        authz:hierarchiesURL       "env:ATTRIBUTE_HIERARCHY_URL";
        authz:labelsStore          [ authz:labelsStorePath
                          "/fuseki/databases/catalogLabels.db" ];
        authz:tripleDefaultLabels  "!" .

:connector1  rdf:type         fk:Connector;
        fk:bootstrapServers   "localhost:9092";
        fk:configFile         "env:{KAFKA_CONFIG_FILE_PATH:}";
        fk:fusekiServiceName  "/knowledge/upload";
        fk:replayTopic        false;
        fk:stateFile          "/fuseki/databases/Replay-RDF.state";
        fk:topic              "knowledge" .

:service3  rdf:type      fuseki:Service;
        fuseki:dataset   :catalogDataset;
        fuseki:endpoint  [ fuseki:operation  fuseki:query ];
        fuseki:endpoint  [ fuseki:name       "graphql";
                           fuseki:operation  graphql:graphql;
                           ja:context        [ ja:cxtName   "graphql:executor";
                                               ja:cxtValue  "io.telicent.jena.graphql.execution.telicent.graph.TelicentGraphExecutor"
                                             ]
                         ];
        fuseki:endpoint  [ fuseki:name       "sparql";
                           fuseki:operation  fuseki:query
                         ];
        fuseki:endpoint  [ fuseki:name       "query";
                           fuseki:operation  fuseki:query
                         ];
        fuseki:endpoint  [ fuseki:name       "upload";
                           fuseki:operation  authz:upload
                         ];
        fuseki:endpoint  [ fuseki:name       "get";
                           fuseki:operation  fuseki:gsp-r
                         ];
        fuseki:endpoint  [ fuseki:name       "update";
                           fuseki:operation  cqrs:update;
                           ja:context        [ ja:cxtName   "kafka:topic";
                                               ja:cxtValue  "catalog"
                                             ]
                         ];
        fuseki:name      "catalog" .
